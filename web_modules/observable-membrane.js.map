{"version":3,"file":"observable-membrane.js","sources":["../node_modules/observable-membrane/dist/modules/observable-membrane.js"],"sourcesContent":["/**\n * Copyright (C) 2017 salesforce.com, inc.\n */\nconst { isArray } = Array;\nconst { getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, defineProperties: ObjectDefineProperties, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\nconst { push: ArrayPush, concat: ArrayConcat, map: ArrayMap, } = Array.prototype;\nconst OtS = {}.toString;\nfunction toString(obj) {\n    if (obj && obj.toString) {\n        return obj.toString();\n    }\n    else if (typeof obj === 'object') {\n        return OtS.call(obj);\n    }\n    else {\n        return obj + '';\n    }\n}\nfunction isUndefined(obj) {\n    return obj === undefined;\n}\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\nfunction isObject(obj) {\n    return typeof obj === 'object';\n}\nconst proxyToValueMap = new WeakMap();\nfunction registerProxy(proxy, value) {\n    proxyToValueMap.set(proxy, value);\n}\nconst unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\nfunction wrapValue(membrane, value) {\n    return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\n}\n/**\n * Unwrap property descriptors will set value on original descriptor\n * We only need to unwrap if value is specified\n * @param descriptor external descrpitor provided to define new property on original value\n */\nfunction unwrapDescriptor(descriptor) {\n    if (hasOwnProperty.call(descriptor, 'value')) {\n        descriptor.value = unwrap(descriptor.value);\n    }\n    return descriptor;\n}\nfunction lockShadowTarget(membrane, shadowTarget, originalTarget) {\n    const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n    targetKeys.forEach((key) => {\n        let descriptor = getOwnPropertyDescriptor(originalTarget, key);\n        // We do not need to wrap the descriptor if configurable\n        // Because we can deal with wrapping it when user goes through\n        // Get own property descriptor. There is also a chance that this descriptor\n        // could change sometime in the future, so we can defer wrapping\n        // until we need to\n        if (!descriptor.configurable) {\n            descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\n        }\n        ObjectDefineProperty(shadowTarget, key, descriptor);\n    });\n    preventExtensions(shadowTarget);\n}\nclass ReactiveProxyHandler {\n    constructor(membrane, value) {\n        this.originalTarget = value;\n        this.membrane = membrane;\n    }\n    get(shadowTarget, key) {\n        const { originalTarget, membrane } = this;\n        const value = originalTarget[key];\n        const { valueObserved } = membrane;\n        valueObserved(originalTarget, key);\n        return membrane.getProxy(value);\n    }\n    set(shadowTarget, key, value) {\n        const { originalTarget, membrane: { valueMutated } } = this;\n        const oldValue = originalTarget[key];\n        if (oldValue !== value) {\n            originalTarget[key] = value;\n            valueMutated(originalTarget, key);\n        }\n        else if (key === 'length' && isArray(originalTarget)) {\n            // fix for issue #236: push will add the new index, and by the time length\n            // is updated, the internal length is already equal to the new length value\n            // therefore, the oldValue is equal to the value. This is the forking logic\n            // to support this use case.\n            valueMutated(originalTarget, key);\n        }\n        return true;\n    }\n    deleteProperty(shadowTarget, key) {\n        const { originalTarget, membrane: { valueMutated } } = this;\n        delete originalTarget[key];\n        valueMutated(originalTarget, key);\n        return true;\n    }\n    apply(shadowTarget, thisArg, argArray) {\n        /* No op */\n    }\n    construct(target, argArray, newTarget) {\n        /* No op */\n    }\n    has(shadowTarget, key) {\n        const { originalTarget, membrane: { valueObserved } } = this;\n        valueObserved(originalTarget, key);\n        return key in originalTarget;\n    }\n    ownKeys(shadowTarget) {\n        const { originalTarget } = this;\n        return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n    }\n    isExtensible(shadowTarget) {\n        const shadowIsExtensible = isExtensible(shadowTarget);\n        if (!shadowIsExtensible) {\n            return shadowIsExtensible;\n        }\n        const { originalTarget, membrane } = this;\n        const targetIsExtensible = isExtensible(originalTarget);\n        if (!targetIsExtensible) {\n            lockShadowTarget(membrane, shadowTarget, originalTarget);\n        }\n        return targetIsExtensible;\n    }\n    setPrototypeOf(shadowTarget, prototype) {\n        if (process.env.NODE_ENV !== 'production') {\n            throw new Error(`Invalid setPrototypeOf invocation for reactive proxy ${toString(this.originalTarget)}. Prototype of reactive objects cannot be changed.`);\n        }\n    }\n    getPrototypeOf(shadowTarget) {\n        const { originalTarget } = this;\n        return getPrototypeOf(originalTarget);\n    }\n    getOwnPropertyDescriptor(shadowTarget, key) {\n        const { originalTarget, membrane } = this;\n        const { valueObserved } = this.membrane;\n        // keys looked up via hasOwnProperty need to be reactive\n        valueObserved(originalTarget, key);\n        let desc = getOwnPropertyDescriptor(originalTarget, key);\n        if (isUndefined(desc)) {\n            return desc;\n        }\n        const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n        if (!isUndefined(shadowDescriptor)) {\n            return shadowDescriptor;\n        }\n        // Note: by accessing the descriptor, the key is marked as observed\n        // but access to the value, setter or getter (if available) cannot observe\n        // mutations, just like regular methods, in which case we just do nothing.\n        desc = wrapDescriptor(membrane, desc, wrapValue);\n        if (!desc.configurable) {\n            // If descriptor from original target is not configurable,\n            // We must copy the wrapped descriptor over to the shadow target.\n            // Otherwise, proxy will throw an invariant error.\n            // This is our last chance to lock the value.\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n            ObjectDefineProperty(shadowTarget, key, desc);\n        }\n        return desc;\n    }\n    preventExtensions(shadowTarget) {\n        const { originalTarget, membrane } = this;\n        lockShadowTarget(membrane, shadowTarget, originalTarget);\n        preventExtensions(originalTarget);\n        return true;\n    }\n    defineProperty(shadowTarget, key, descriptor) {\n        const { originalTarget, membrane } = this;\n        const { valueMutated } = membrane;\n        const { configurable } = descriptor;\n        // We have to check for value in descriptor\n        // because Object.freeze(proxy) calls this method\n        // with only { configurable: false, writeable: false }\n        // Additionally, method will only be called with writeable:false\n        // if the descriptor has a value, as opposed to getter/setter\n        // So we can just check if writable is present and then see if\n        // value is present. This eliminates getter and setter descriptors\n        if (hasOwnProperty.call(descriptor, 'writable') && !hasOwnProperty.call(descriptor, 'value')) {\n            const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\n            descriptor.value = originalDescriptor.value;\n        }\n        ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\n        if (configurable === false) {\n            ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\n        }\n        valueMutated(originalTarget, key);\n        return true;\n    }\n}\n\nfunction wrapReadOnlyValue(membrane, value) {\n    return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\n}\nclass ReadOnlyHandler {\n    constructor(membrane, value) {\n        this.originalTarget = value;\n        this.membrane = membrane;\n    }\n    get(shadowTarget, key) {\n        const { membrane, originalTarget } = this;\n        const value = originalTarget[key];\n        const { valueObserved } = membrane;\n        valueObserved(originalTarget, key);\n        return membrane.getReadOnlyProxy(value);\n    }\n    set(shadowTarget, key, value) {\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid mutation: Cannot set \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n        }\n        return false;\n    }\n    deleteProperty(shadowTarget, key) {\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid mutation: Cannot delete \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n        }\n        return false;\n    }\n    apply(shadowTarget, thisArg, argArray) {\n        /* No op */\n    }\n    construct(target, argArray, newTarget) {\n        /* No op */\n    }\n    has(shadowTarget, key) {\n        const { originalTarget, membrane: { valueObserved } } = this;\n        valueObserved(originalTarget, key);\n        return key in originalTarget;\n    }\n    ownKeys(shadowTarget) {\n        const { originalTarget } = this;\n        return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n    }\n    setPrototypeOf(shadowTarget, prototype) {\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid prototype mutation: Cannot set prototype on \"${originalTarget}\". \"${originalTarget}\" prototype is read-only.`);\n        }\n    }\n    getOwnPropertyDescriptor(shadowTarget, key) {\n        const { originalTarget, membrane } = this;\n        const { valueObserved } = membrane;\n        // keys looked up via hasOwnProperty need to be reactive\n        valueObserved(originalTarget, key);\n        let desc = getOwnPropertyDescriptor(originalTarget, key);\n        if (isUndefined(desc)) {\n            return desc;\n        }\n        const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n        if (!isUndefined(shadowDescriptor)) {\n            return shadowDescriptor;\n        }\n        // Note: by accessing the descriptor, the key is marked as observed\n        // but access to the value or getter (if available) cannot be observed,\n        // just like regular methods, in which case we just do nothing.\n        desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\n        if (hasOwnProperty.call(desc, 'set')) {\n            desc.set = undefined; // readOnly membrane does not allow setters\n        }\n        if (!desc.configurable) {\n            // If descriptor from original target is not configurable,\n            // We must copy the wrapped descriptor over to the shadow target.\n            // Otherwise, proxy will throw an invariant error.\n            // This is our last chance to lock the value.\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n            ObjectDefineProperty(shadowTarget, key, desc);\n        }\n        return desc;\n    }\n    preventExtensions(shadowTarget) {\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid mutation: Cannot preventExtensions on ${originalTarget}\". \"${originalTarget} is read-only.`);\n        }\n        return false;\n    }\n    defineProperty(shadowTarget, key, descriptor) {\n        if (process.env.NODE_ENV !== 'production') {\n            const { originalTarget } = this;\n            throw new Error(`Invalid mutation: Cannot defineProperty \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n        }\n        return false;\n    }\n}\n\nfunction extract(objectOrArray) {\n    if (isArray(objectOrArray)) {\n        return objectOrArray.map((item) => {\n            const original = unwrap(item);\n            if (original !== item) {\n                return extract(original);\n            }\n            return item;\n        });\n    }\n    const obj = ObjectCreate(getPrototypeOf(objectOrArray));\n    const names = getOwnPropertyNames(objectOrArray);\n    return ArrayConcat.call(names, getOwnPropertySymbols(objectOrArray))\n        .reduce((seed, key) => {\n        const item = objectOrArray[key];\n        const original = unwrap(item);\n        if (original !== item) {\n            seed[key] = extract(original);\n        }\n        else {\n            seed[key] = item;\n        }\n        return seed;\n    }, obj);\n}\nconst formatter = {\n    header: (plainOrProxy) => {\n        const originalTarget = unwrap(plainOrProxy);\n        // if originalTarget is falsy or not unwrappable, exit\n        if (!originalTarget || originalTarget === plainOrProxy) {\n            return null;\n        }\n        const obj = extract(plainOrProxy);\n        return ['object', { object: obj }];\n    },\n    hasBody: () => {\n        return false;\n    },\n    body: () => {\n        return null;\n    }\n};\n// Inspired from paulmillr/es6-shim\n// https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L176-L185\nfunction getGlobal() {\n    // the only reliable means to get the global object is `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    // Gracefully degrade if not able to locate the global object\n    return {};\n}\nfunction init() {\n    if (process.env.NODE_ENV === 'production') {\n        // this method should never leak to prod\n        throw new ReferenceError();\n    }\n    const global = getGlobal();\n    // Custom Formatter for Dev Tools. To enable this, open Chrome Dev Tools\n    //  - Go to Settings,\n    //  - Under console, select \"Enable custom formatters\"\n    // For more information, https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview\n    const devtoolsFormatters = global.devtoolsFormatters || [];\n    ArrayPush.call(devtoolsFormatters, formatter);\n    global.devtoolsFormatters = devtoolsFormatters;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n    init();\n}\nfunction createShadowTarget(value) {\n    let shadowTarget = undefined;\n    if (isArray(value)) {\n        shadowTarget = [];\n    }\n    else if (isObject(value)) {\n        shadowTarget = {};\n    }\n    return shadowTarget;\n}\nconst ObjectDotPrototype = Object.prototype;\nfunction defaultValueIsObservable(value) {\n    // intentionally checking for null\n    if (value === null) {\n        return false;\n    }\n    // treat all non-object types, including undefined, as non-observable values\n    if (typeof value !== 'object') {\n        return false;\n    }\n    if (isArray(value)) {\n        return true;\n    }\n    const proto = getPrototypeOf(value);\n    return (proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null);\n}\nconst defaultValueObserved = (obj, key) => {\n    /* do nothing */\n};\nconst defaultValueMutated = (obj, key) => {\n    /* do nothing */\n};\nconst defaultValueDistortion = (value) => value;\nfunction wrapDescriptor(membrane, descriptor, getValue) {\n    const { set, get } = descriptor;\n    if (hasOwnProperty.call(descriptor, 'value')) {\n        descriptor.value = getValue(membrane, descriptor.value);\n    }\n    else {\n        if (!isUndefined(get)) {\n            descriptor.get = function () {\n                // invoking the original getter with the original target\n                return getValue(membrane, get.call(unwrap(this)));\n            };\n        }\n        if (!isUndefined(set)) {\n            descriptor.set = function (value) {\n                // At this point we don't have a clear indication of whether\n                // or not a valid mutation will occur, we don't have the key,\n                // and we are not sure why and how they are invoking this setter.\n                // Nevertheless we preserve the original semantics by invoking the\n                // original setter with the original target and the unwrapped value\n                set.call(unwrap(this), membrane.unwrapProxy(value));\n            };\n        }\n    }\n    return descriptor;\n}\nclass ReactiveMembrane {\n    constructor(options) {\n        this.valueDistortion = defaultValueDistortion;\n        this.valueMutated = defaultValueMutated;\n        this.valueObserved = defaultValueObserved;\n        this.valueIsObservable = defaultValueIsObservable;\n        this.objectGraph = new WeakMap();\n        if (!isUndefined(options)) {\n            const { valueDistortion, valueMutated, valueObserved, valueIsObservable } = options;\n            this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;\n            this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\n            this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\n            this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\n        }\n    }\n    getProxy(value) {\n        const unwrappedValue = unwrap(value);\n        const distorted = this.valueDistortion(unwrappedValue);\n        if (this.valueIsObservable(distorted)) {\n            const o = this.getReactiveState(unwrappedValue, distorted);\n            // when trying to extract the writable version of a readonly\n            // we return the readonly.\n            return o.readOnly === value ? value : o.reactive;\n        }\n        return distorted;\n    }\n    getReadOnlyProxy(value) {\n        value = unwrap(value);\n        const distorted = this.valueDistortion(value);\n        if (this.valueIsObservable(distorted)) {\n            return this.getReactiveState(value, distorted).readOnly;\n        }\n        return distorted;\n    }\n    unwrapProxy(p) {\n        return unwrap(p);\n    }\n    getReactiveState(value, distortedValue) {\n        const { objectGraph, } = this;\n        let reactiveState = objectGraph.get(distortedValue);\n        if (reactiveState) {\n            return reactiveState;\n        }\n        const membrane = this;\n        reactiveState = {\n            get reactive() {\n                const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue);\n                // caching the reactive proxy after the first time it is accessed\n                const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\n                registerProxy(proxy, value);\n                ObjectDefineProperty(this, 'reactive', { value: proxy });\n                return proxy;\n            },\n            get readOnly() {\n                const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue);\n                // caching the readOnly proxy after the first time it is accessed\n                const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\n                registerProxy(proxy, value);\n                ObjectDefineProperty(this, 'readOnly', { value: proxy });\n                return proxy;\n            }\n        };\n        objectGraph.set(distortedValue, reactiveState);\n        return reactiveState;\n    }\n}\n\nexport default ReactiveMembrane;\n/** version: 0.26.0 */\n"],"names":[],"mappings":"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"}